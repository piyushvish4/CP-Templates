class BIT{

    int n;
    vector<int>v1;
    vector<int>v2;

public:
    BIT(vector<int>&a)
    {
        n=a.size()-1;
        v1.resize(n+1);
        v2.resize(n+1);
    }

    void update1(int idx, int val)
    {
        for(int i=idx;i<=n;i+=(i&-i))
        {
            v1[i]+=val;
        }
    }

    void update2(int idx, int val)
    {
        for(int i=idx;i<=n;i+=(i&-i))
        {
            v2[i]+=val;
        }
    }

    void update(int l, int r, int val)
    {
        update1(l, val);
        update1(r + 1, -val);
        update2(l, val*(l-1));
        update2(r + 1, -(val*r));
    }

    int query1(int idx)
    {
        int sum=0;
        for(int i=idx;i>0;i-=(i&-i))
        {
            sum+=v1[i];
        }
        return sum;
    }

    int query2(int idx)
    {
        int sum=0;
        for(int i=idx;i>0;i-=(i&-i))
        {
            sum+=v2[i];
        }
        return sum;
    }

    int fun(int idx)
    {
        return query1(idx)*idx - query2(idx);
    }

    int query(int l, int r)
    {
        return fun(r)-fun(l-1);
    }
};
